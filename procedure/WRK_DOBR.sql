DELIMITER $$
CREATE DEFINER=`stastrjn_nrn`@`localhost` PROCEDURE `WRK_DOBR`(IN `INPERSONTYPEID` INT, IN `INAGENTID` INT, IN `INEVENTPARAMS` VARCHAR(50), IN `INACTIONTYPEID` INT, IN `INACTIONTEMPLATE` TEXT, IN `INACTIONPARAMS` JSON, IN `INEVENTUID` VARCHAR(36), IN `INFIRMID` INT, IN `INSUBJECT` INT, IN `INTABLENAME` VARCHAR(30))
BEGIN
  DECLARE sBody text;  
  DECLARE dSTARTTIME datetime; 
  DECLARE dENDTIME datetime;
  DECLARE dSTIME int; 
  DECLARE dETIME int;
  DECLARE iISAUTO int;
  DECLARE jINACTIONPARAMS json;
  SET sBody = 	WRK_CREATEMSGBODY2EVENT(INACTIONTEMPLATE,INEVENTUID);
  -- Выполняем соответствующее действие
  -- CALL ADD_2TMPDEBUGLOG (concat('Событие ',EVID)); -- ОТЛАДКА!!

  CASE INACTIONTYPEID 
  WHEN 1 THEN call ADD_MESSAGE(32,INAGENTID,sBody);
  WHEN 3 THEN
    BEGIN
    select wb.ACTIONPARAMS into jINACTIONPARAMS from wrk_bizrule wb WHERE wb.ID=14;
    set dSTIME = jINACTIONPARAMS->"$.starttime"; 
    set dETIME = jINACTIONPARAMS->"$.endtime";
    set dSTARTTIME = DATE_ADD(CURRENT_TIMESTAMP,INTERVAL dSTIME HOUR);
    set dENDTIME = DATE_ADD(CURRENT_TIMESTAMP,INTERVAL dETIME HOUR);
    IF (INACTIONTYPEID = 4) THEN
      SET iISAUTO = 1;
    ELSE   
      SET iISAUTO = 0;
    END IF;  
      CALL ADD_TASK(sBody,'',dSTARTTIME,dENDTIME,GET_SYSTEMID(),INAGENTID,GET_AUDITORID(INAGENTID),INSUBJECT,INTABLENAME,iISAUTO,INFIRMID);

    END;
  END CASE;
 
 

END$$
DELIMITER ;